@use '../../variables';

.recommendations-container {
  position: relative;
  min-height: 70vh;
  @include variables.centered-column;
  // @include variables.glass-container; // Uncomment if needed

  .match-profile-container {
    @include variables.whole-page;
    @include variables.centered-column;
    @include variables.glass-container;

    width: 90%;
    height: 75vh;
    margin-top: 3rem;
    align-self: center;
    justify-self: center;
    display: flex;
    justify-content: space-around;
    margin-bottom: 0;
    transition: transform 0.75s 0.1s ease-in;

    // Hover and active states for like/dislike buttons
    &:has(+ .buttons-container .like:hover) {
      border-color: variables.$button-green;
    }

    &:has(+ .buttons-container .dislike:hover) {
      border-color: variables.$button-red;
    }

    &:has(+ .buttons-container .like:active) {
      // Add effects for like active state
    }

    &:has(+ .buttons-container .dislike:active) {
      // Add effects for dislike active state
    }

    // Like/Dislike animation classes
    &.like-animation {
      filter: blur(2px);
      transform: translateX(200%);
      background-color: variables.$valid-green;
    }

    &.dislike-animation {
      filter: blur(2px);
      transform: translateX(-200%);
      background-color: variables.$error-red;
    }

    .picture-bio-container {
      width: 100%;
      display: flex;
      flex-direction: row;
      align-items: center;

      .picture-container {
        justify-self: center;
        align-items: center;
        display: flex;
        width: 50%;

        .extra-picture-container {
          width: fit-content;
          height: fit-content;
          display: flex;
          justify-content: flex-end;
          position: relative;
          margin-right: 4rem;

          @media (max-width: 575px) {
            justify-content: center;
            margin-right: 2rem;
          }

          img.match-profile-picture {
            height: auto;
            max-width: 80%;

            @media (max-width: 575px) {
              max-width: 120%;
            }
          }

          .music-link {
            position: absolute;
            bottom: 5%;
            right: 0;
            width: clamp(3rem, 5vw, 6rem);
            height: clamp(3rem, 5vw, 6rem);
            color: white;
            font-size: 1rem;
            text-align: center;
            border-radius: 50%;
            transition: all 0.1s ease-in-out;
            transform-origin: center center;

            & > * {
              width: 100%;
              height: 100%;
            }

            &:hover {
              cursor: pointer;
              scale: 1.1;
            }
          }
        }
      }

      .bio-container {
        width: 100%;
        flex: 1;
        justify-self: flex-end;
        white-space: nowrap;
        height: fit-content;

        table {
          width: 100%;
          height: 100%;
          border-collapse: collapse;
          table-layout: fixed;
          border-spacing: 0;
          overflow: clip;

          tbody {
            tr {
              display: flex;
              flex-wrap: wrap;

              th {
                border-bottom: 1px solid variables.$main-pink;
                width: 100%;
                text-align: left;
                padding-left: 1rem;

                @media (max-width: 575px) {
                  font-size: 0.7rem;
                }

                .two-column {
                  width: 50%;
                }

                .one-column {
                  column-span: 2;
                }
              }

              td {
                padding-bottom: 0.5rem;
                width: 100%;
                font-size: 0.9rem;

                @media (max-width: 575px) {
                  font-size: 0.6rem;
                }
              }
            }
          }
        }
      }
    }

    .description-container {
      text-align: center;
      padding: 1rem 0;

      @media (max-width: 575px) {
        font-size: 0.8rem;
        padding: 0;
      }
    }

    .name-container {
      text-align: center;
      color: variables.$main-blue;

      .name {
        font-size: 1.5rem;
      }
    }
  }

  .buttons-container {
    width: 18rem;
    height: 4rem;
    border: 1px solid black;
    border-radius: 50px;
    background-color: rgba(255, 255, 255, 0.9);
    box-shadow: variables.$default-button-shadow;
    padding: 0 0.75rem;
    position: absolute;
    bottom: -2.5rem;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    transition: all 0.1s ease-in-out;

    @media (max-width: 575px) {
      bottom: -1.5rem;
    }

    .like, .dislike {
      height: 3rem;
      width: 3rem;
      border: 1px solid black;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .like {
      background-color: variables.$button-green;
      padding-left: 5px;
    }

    .dislike {
      background-color: variables.$button-red;
    }

    &:has(.like:hover) {
      background-color: variables.$button-green;
      box-shadow: variables.$upper-inset-shadow-hover;

      .dislike {
        opacity: 0;
        visibility: hidden;
      }

      .like {
        border: none;
        box-shadow: none;
        width: 100%;
        position: relative;

        svg {
          position: absolute;
          right: 30%;
          top: 20%;
          scale: 1.3;
        }
      }
    }

    &:has(.dislike:hover) {
      background-color: variables.$button-red;
      box-shadow: variables.$upper-inset-shadow-hover;

      .like {
        opacity: 0;
        visibility: hidden;
      }

      .dislike {
        border: none;
        box-shadow: none;
        width: 100%;
        position: relative;

        svg {
          position: absolute;
          left: 25%;
          top: 15%;
          scale: 1.3;
        }
      }
    }
  }

  .no-matches {
    justify-self: center;
    width: fit-content;
    height: 100%;
    text-align: center;
  }

  // Endless spinner animation
  .endless {
    &::before, &::after {
      animation: rotate 6s var(--timing) infinite, transformEffect 2s 6s forwards !important;
    }
  }
}

// Media Queries

@media (max-width: 575px) {
  .recommendations-container {
    .match-profile-container {
      height: 80vh;
    }

    .buttons-container {
      bottom: -1.5rem;
    }

    .picture-bio-container .extra-picture-container {
      margin-right: 2rem;
    }

    .picture-bio-container .match-profile-picture {
      max-width: 120%;
    }

    .description-container {
      font-size: 0.8rem;
      padding: 0;
    }
  }
}

@media (min-width: 768px) {
  .recommendations-container {
    .match-profile-container {
      min-height: 75vh;
    }
  }
}

@media (min-width: 1200px) {
  .recommendations-container {
    .match-profile-container {
      min-height: 75vh;
    }
  }
}